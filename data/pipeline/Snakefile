"""
Snakefile for source_data analysis pipeline.
"""

from pathlib import Path

# configure paths
HOME = Path.home()

BHSA_REPO = HOME / "github/etcbc/bhsa"
BHSA_BASE_DATA = BHSA_REPO / "tf/2021"
BHSA_GENRE_DATA = HOME / "github/etcbc/genre_synvar/tf/2021"
BHSA_HEADS_DATA = HOME / "github/etcbc/heads/tf/2021"


def globfiles(path, pattern):
    """Simple method to glob a directory."""
    return Path(path).glob(pattern)


def searchfiles(directory, filenames, ext=None):
    """Search a directory for a list of filenames."""
    if ext:
        filenames = [f'{file}{ext}' for file in filenames]
    return [
        file for file in Path(directory).glob('*')
        if file.name in filenames
    ]


# rule all:
#     input:
#         None

rule build_corpus:
    params:
        bhsa_repo=BHSA_REPO,
        bhsa_data_path=directory(BHSA_BASE_DATA),
        bhsa_genre_path=directory(BHSA_GENRE_DATA),
        bsha_heads_path=directory(BHSA_HEADS_DATA),
    input:
        "scripts/corpus_building/config.py",
        globfiles(BHSA_BASE_DATA, '*.tf'),
        globfiles(BHSA_GENRE_DATA, '*.tf'),
    output:
        directory("../data/corpus/")
    script:
        "scripts/build_corpus.py"


# Labeling Configs
LABELING_PROJECTS = ['b_time']
ANNOTATION_DIR = Path("../data/annotations")

rule label_dataset:
    params:
        projects=LABELING_PROJECTS,
        annotation_dir=ANNOTATION_DIR,
    input:
        corpus=rules.build_corpus.output,
        tense_data="source_data/eng_tenses/eng_tenses.pkl",
        subscripts=[
            "scripts/labeling/projects.py",
            "scripts/labeling/annotation_sheets.py",
        ],
    output:
        expand(
            ANNOTATION_DIR / 'sheets' / 'blank' / '{project}_1.docx',
            project=LABELING_PROJECTS,
        )
    script:
        "scripts/label_dataset.py"
